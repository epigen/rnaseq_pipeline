
##### global workflow dependencies #####
conda: "envs/global.yaml"

# libraries
import glob
import pandas as pd
from snakemake.utils import validate
from snakemake.utils import min_version

##### set module name #####
module_name = "rnaseq_pipeline"

##### set minimum snakemake version #####
min_version("8.20.1")

##### setup report #####
report: "report/workflow.rst"

##### load config and sample annotation sheets #####
configfile: "config/config.yaml"

# TODO load annot etc
validate(config, schema="../schemas/config.schema.yaml")

samples = (
    pd.read_csv(config["samples"], sep="\t", dtype={"sample_name": str})
    .set_index("sample_name", drop=False)
    .sort_index()
)

validate(samples, schema="../schemas/samples.schema.yaml")

units = (
    pd.read_csv(config["units"], sep="\t", dtype={"sample_name": str, "unit_name": str})
    .set_index(["sample_name", "unit_name"], drop=False)
    .sort_index()
)
validate(units, schema="../schemas/units.schema.yaml")


wildcard_constraints:
    sample="|".join(samples["sample_name"]),
    unit="|".join(units["unit_name"]),

##### set global variables
result_path = os.path.join(config["result_path"], module_name)



##### load rules #####
include: "rules/common.smk"
include: "rules/ref.smk"
include: "rules/trim.smk"
include: "rules/qc.smk"
include: "rules/align.smk"
include: "rules/quantification.smk"

##### target rules #####
rule all:
    input:
        get_final_output(),
